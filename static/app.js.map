{"version":3,"sources":["src/js/site.js","src/js/sw.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AADA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AAAA","file":"static/app.js","sourcesContent":["console.log('loaded site.js');\n","var CACHE_NAME = 'site-cache';\nvar urlsToCache = [\n  '/',\n  '/site.css',\n  '/site-min.js'\n];\n\nself.addEventListener('install', function(event) {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n    .then(function(cache) {\n      console.log('Opened cache');\n      return cache.addAll(urlsToCache);\n    })\n  );\n});\n\nself.addEventListener('fetch', function(event) {\n  event.respondWith(\n    caches.match(event.request)\n    .then(function(response) {\n      // Cache hit - return response\n      if (response) {\n        return response;\n      }\n\n      // IMPORTANT: Clone the request. A request is a stream and\n      // can only be consumed once. Since we are consuming this\n      // once by cache and once by the browser for fetch, we need\n      // to clone the response.\n      var fetchRequest = event.request.clone();\n\n      return fetch(fetchRequest).then(\n        function(response) {\n          // Check if we received a valid response\n          if (!response || response.status !== 200 || response.type !== 'basic') {\n            return response;\n          }\n\n          // IMPORTANT: Clone the response. A response is a stream\n          // and because we want the browser to consume the response\n          // as well as the cache consuming the response, we need\n          // to clone it so we have two streams.\n          var responseToCache = response.clone();\n\n          caches.open(CACHE_NAME)\n            .then(function(cache) {\n              cache.put(event.request, responseToCache);\n            });\n\n          return response;\n        }\n      );\n    })\n  );\n});\n"]}